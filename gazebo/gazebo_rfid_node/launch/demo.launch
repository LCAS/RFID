<?xml version="1.0"?>
 <!--

      Spawns a rfid equipped thorvald in ncfm facilities.
-->

<launch>
  <!-- PARAMS .............................................................. -->
  <arg name="use_sim_time" default="true"/>
  <param name ="/use_sim_time" value="$(arg use_sim_time)"/>

  <!-- <env name="ROSCONSOLE_CONFIG_FILE"
    value="$(find gazebo_rfid_node)/config/custom_rosconsole.conf"/> -->

  <arg name="gazeboGui" default="true"/>
  <arg name="rvizGui" default="true"/>
  
  <!-- this file is also included in base_simulation. copied by simplicity  -->
  <arg name="world_name" default="$(find nbs_experiments)/worlds/empty.world"/>
  <arg name="map" default="$(find gazebo_rfid_node)/maps/ncfm_sim.yaml"/>
  <arg name="rviz_config_file" default="$(find gazebo_rfid_node)/rviz/gazebo_thorvald_rfid.rviz"/>
  <arg name="map_2_loc_map_pose"   default="0.0 0.0 0.0 0.0 0.0 0.0 1.0"/>

  <arg name="tf_prefix" default="" />
  <arg name="robot_name" default="thorvald_001" />
  <arg name="datum_file" default=""/>
  <arg name="robot_model" default="$(find rasberry_bringup)/config/robot_008.yaml"/>
  <!--Args not likely to change -->
  <!-- <arg name="odom"           default="odometry/gazebo"/> -->
  <!-- <arg name="robot_model" default="$(find thorvald_description)/config/thorvald_ii_4wd4ws_std/thorvald_ii_4wd4ws_std.yaml" /> -->

  <arg name="robot_pose_x" default="0.0"/>
  <arg name="robot_pose_y" default="0.0"/>
  <arg name="robot_pose_roll" default="0.0"/>
  <arg name="robot_pose_pitch" default="0.0"/>
  <arg name="robot_pose_yaw" default="0.0"/>

  <!--
  This is an approximation:
        We consider RFID reader to be a "wireless reader" .
        It has no control over transmitted power.
  <param name="model_extras" command="$(find xacro)/xacro '$(find gazebo_rfid_node)/urdf/sensor_modules/sensor_frames_lincoln_rfid.xacro' - -inorder  min_frequency:='$(arg reader_min_frequency)' max_frequency:='$(arg reader_max_frequency)' power:='$(arg reader_power)' sensitivity:='$(arg reader_sensitivity)'"/> 
  -->
  <!-- <arg name="model_extras" value="$(find gazebo_rfid_node)/urdf/sensor_modules/sensor_frames_lincoln_rfid.xacro" /> -->
  <arg name="model_extras" value="$(find rasberry_bringup)/urdf/robot_008_sensors_rfid.xacro"/>
  <arg name="reader_min_frequency" default="800.0"/>
  <arg name="reader_max_frequency" default="920.0"/>
  <arg name="reader_power" default="15.0"/> <!-- (dBm) RFID reader txted. power -->
  <arg name="reader_sensitivity" default="-85.0"/> <!-- (dBm) RFID reader minimum received power -->
  <!-- Where is Receiver antenna Gain? It is embedded in the sensor. Ideas about improving it are welcome. -->
  
  <arg name="sigma_power"          default="3.92"/>
  <arg name="rfidgrid_resolution"  default="0.25"/> 

  <!--  RFID TAGS-->
  <arg name="tag1_x" default="1.0"/>
  <arg name="tag1_y" default="0.0"/>
  <arg name="tag1_z" default="0.0"/>
  <arg name="tag1_roll" default="0.0"/>
  <arg name="tag1_pitch" default="0.0"/>
  <arg name="tag1_yaw" default="0.0"/>

  <arg name="tag1_id" default="042" /> <!-- We will use essid in transceiver model to store this ID -->
  <arg name="tag1_gain" default="25.2"/>  <!-- (dBm)  TAG radiation pattern is OMNIDIRECTIONAL https://www.hindawi.com/journals/ijap/2013/194145/tab4/ -->
  <arg name="tag1_sensitivity" default="-85.0"/> <!-- (dBm) Used to draw coverage grid around tag. A good value is reader's sensitivity -->
  
  <arg name="tag2_x" default="1.0"/>
  <arg name="tag2_y" default="1.0"/>
  <arg name="tag2_z" default="0.0"/>
  <arg name="tag2_roll" default="0.0"/>
  <arg name="tag2_pitch" default="0.0"/>
  <arg name="tag2_yaw" default="0.0"/>

  <arg name="tag2_id" default="0112358" /> <!-- We will use essid in transceiver model to store this ID -->
  <arg name="tag2_gain" default="25.2"/>  <!-- (dBm)  TAG radiation pattern is OMNIDIRECTIONAL https://www.hindawi.com/journals/ijap/2013/194145/tab4/ -->
  <arg name="tag2_sensitivity" default="-85.0"/> <!-- (dBm) Used to draw coverage grid around tag. A good value is reader's sensitivity -->


  <!-- create gazebo world ................................................. -->
 <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <!-- this is where the gazebo custom preloader is compiled. It might be in a different place is we release this  -->
   <arg name="extra_gazebo_args" value="-s $(find gazebo_rfid_node)/../../../../devel/lib/libgazebo_custom_sensor_preloader.so"/>
   <arg name="world_name" value="$(arg world_name)"/>
   <arg name="paused" value="false"/>
   <arg name="use_sim_time" value="$(arg use_sim_time)"/>
   <arg name="gui" value="$(arg gazeboGui)"/>
   <arg name="recording" value="false"/>
   <arg name="debug" value="false"/>
   <arg name="verbose" value="true"/>
 </include>

  <!-- Spawn thorvald Bond ................................................. -->
   
  <!-- state publisher -->
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" />

  <!-- create robot model -->
  <param name="robot_description" command="$(find xacro)/xacro '$(find thorvald_description)/urdf/thorvald_model.xacro' --inorder datum_file:='$(arg datum_file)' robot_name:='$(arg robot_name)' tf_prefix:='$(arg tf_prefix)' robot_config:='$(arg robot_model)' model_extras:='$(arg model_extras)'  min_frequency:='$(arg reader_min_frequency)' max_frequency:='$(arg reader_max_frequency)' power:='$(arg reader_power)'  sensitivity:='$(arg reader_sensitivity)'" />

  <!-- base bringup-->
  <node pkg="thorvald_base" type="base_driver" name="base_driver" output="screen">
    <param name="tf_prefix" value="$(arg tf_prefix)"/>
    <rosparam command="load" file="$(arg robot_model)" />
    <param name="simple_sim" value="True" />
    <param name="enable_odom_tf" value="False"/>
    <param name="odom_frame_id" value="odom"/>
  </node>

  <!-- spawn it!-->
  <node pkg="gazebo_ros" type="spawn_model" name="spawner" args="-urdf -param /robot_description -model thorvald_ii  -x $(arg robot_pose_x) -y $(arg robot_pose_y) -z 0 -R $(arg  robot_pose_roll)  -P $(arg robot_pose_pitch)  -Y $(arg robot_pose_yaw)"/>

  <!-- Add rfid tag(s)...................................................... -->
  <param name="tag1_description" command="$(find xacro)/xacro '$(find gazebo_rfid_node)/urdf/tag_model.xacro' --inorder ID:='$(arg tag1_id)' gain:='$(arg tag1_gain)' sensitivity:='$(arg tag1_sensitivity)'" /> 
  <param name="tag2_description" command="$(find xacro)/xacro '$(find gazebo_rfid_node)/urdf/tag_model.xacro' --inorder ID:='$(arg tag2_id)' gain:='$(arg tag2_gain)' sensitivity:='$(arg tag2_sensitivity)'" /> 
  <!-- spawn'em!-->
  <node pkg="gazebo_ros" type="spawn_model" name="tag1_spawner" args="-urdf -param /tag1_description -model tag_$(arg tag1_id) -x $(arg tag1_x) -y $(arg tag1_y) -z $(arg tag1_z)  -R $(arg  tag1_roll)  -P $(arg tag1_pitch)  -Y $(arg tag1_yaw)"/>
  <!-- <node pkg="gazebo_ros" type="spawn_model" name="tag2_spawner" args="-urdf -param /tag2_description -model tag_$(arg tag2_id) -x $(arg tag2_x) -y $(arg tag2_y) -z $(arg tag2_z)  -R $(arg  tag2_roll)  -P $(arg tag2_pitch)  -Y $(arg tag2_yaw)"/> -->


  <!-- GAZEBO-ROS bridge ................................................... -->
  <node pkg="gazebo_rfid_node" type="wirelessNodeMonitor" name="rfid_node_sim" >
       <param name="ros_rfid_topic_name" value="/lastTag"/>
       <param name="ros_rfid_frame_id" value="lastTag"/>
       <param name="gazebo_wireless_node_topic_name" value="/gazebo/default/thorvald_ii/base_link/$(arg robot_name)_rfid_reader_sensor_left/transceiver"/>
     </node>

  <!-- Navigation .......................................................... -->

  <!-- localization -->
  <!-- <node name="loc_map_server" pkg="map_server" type="map_server" args="$(arg map)"  output="screen">
    <remap from="map" to ="loc_map"/>
    <param name="frame_id" value="loc_map"/>
  </node> -->

  <node pkg="fake_localization" type="fake_localization" respawn="false" name="fake_loc">
    <remap from="base_pose_ground_truth" to="/thorvald_001/odometry/gazebo" />
    <param name="odom_frame_id" type="string" value="odom"/>
    <param name="base_frame_id" type="string" value="base_link"/>
  </node>

  <node pkg="tf" type="static_transform_publisher" name="map_2_loc_map_tfb"
        args="$(arg map_2_loc_map_pose) map loc_map 1000"/>

  <!-- map server(s) -->

  <!-- Also used in move base... -->
  <group ns="no_go">
      <node name="no_go_map_server" pkg="map_server" type="map_server" args="$(arg map)">
           <remap from="map" to="/no_go_map"/>
      </node>
</group>
  <node name="map_server" pkg="map_server" type="map_server" args="$(arg map)"/>

  <!-- robot_pose_publisher -->
  <node pkg="robot_pose_publisher" type="robot_pose_publisher" name="robot_pose_publisher" respawn="true">
    <param name="~map_frame" value="/map"/>
    <param name="~base_frame" value="/base_link"/>
  </node>

  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen" clear_params="true">
      <remap from="odom" to="thorvald_001/odometry/gazebo"/>
      <rosparam file="$(find rasberry_move_base)/config/dwa/dwa_planner_ros.yaml" command="load"/>
      <rosparam file="$(find rasberry_move_base)/config/dwa/dwa_move_base_params.yaml" command="load"/>
      <rosparam file="$(find rasberry_move_base)/config/costmap_common_params.yaml" command="load" ns="global_costmap"/>
      <rosparam file="$(find rasberry_move_base)/config/costmap_common_params.yaml" command="load" ns="local_costmap"/>
      <rosparam file="$(find rasberry_move_base)/config/local_costmap_params.yaml" command="load"/>
      <rosparam file="$(find rasberry_move_base)/config/global_costmap_params.yaml" command="load"/>
      <rosparam file="$(find rasberry_move_base)/config/nav_fn_ros.yaml" command="load"/>
  </node>


  <!-- Visualization ....................................................... -->
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(arg rviz_config_file)" if="$(arg rvizGui)"/>

   <!-- grid launcher -->
  <include file="$(find rfid_grid_map)/launch/grid.launch">
    <arg name="rfidgrid_resolution"       value="$(arg rfidgrid_resolution)"/>
    <arg name="sigma_power"               value="$(arg sigma_power)"/>
    <arg name="namespace"                 value="$(arg robot_name)"/>
    <arg name="robot_frame"               value="$(arg tf_prefix)rfid_reader_link_left"/>
    <arg name="rfid_belief_srv_name"      value="get_rfid_belief_left"/>
  </include>


</launch>
